# Generated by Django 4.2.15 on 2024-08-30 16:58

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PongUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=150, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='Username must be 150 characters or fewer. Letters, digits and @/./+/-/_ only.', regex='^[\\w.@+-]+$')])),
                ('display_name', models.CharField(max_length=255)),
                ('profile_picture', models.ImageField(blank=True, default='static/pong/img/p1.png', null=True, upload_to='static/userImages/')),
                ('banner_picture', models.ImageField(blank=True, default='static/pong/img/banner.jpeg', null=True, upload_to='static/userImages/')),
                ('down_key', models.CharField(blank=True, default='s', max_length=255, null=True)),
                ('up_key', models.CharField(blank=True, default='w', max_length=255, null=True)),
                ('friends', models.JSONField(default=list)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='offline', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
